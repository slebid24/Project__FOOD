{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACnI8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,4BAA4B,UAAU,MAAM,SAAS;AACrD,mDAAmD,WAAW;AAC9D,iDAAiD,WAAW;AAC5D;AACA;AACA;AACA,2DAA2D,WAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,+DAAW;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC3E0B;AACA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAQ;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iDAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kDAAU;AACnB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACxGpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACF;;;;;;;;;;;;;;;;AChEa;AAChC;AACA;AACA,iBAAiB,uFAAuF;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA,oCAAoC,+CAAO;AAC3C,QAAQ;AACR,oCAAoC,+CAAO;AAC3C;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA,oCAAoC,+CAAO;AAC3C,QAAQ;AACR,oCAAoC,+CAAO;AAC3C;AACA;AACA;AACA,IAAI;AACJ;AACA,4BAA4B,+CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA,oCAAoC,+CAAO;AAC3C,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACrMrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACnDnB;AACA;AACA,iBAAiB,IAAI;AACrB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACJ;AACjB;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,IAAI,YAAY,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACkB;;;;;;;UChClB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACA;AACE;AACF;AACA;AACF;AACQ;AAC1C;AACA;AACA;AACA,yCAAyC,yDAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,yDAAI;AACP,GAAG,0DAAK;AACR,GAAG,0DAAK;AACR,GAAG,2DAAM;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG,0DAAK;AACR,GAAG,0DAAK;AACR,GAAG,yDAAI;AACP,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n      // КАЛЬКУЛЯТОР\r\n      const result = document.querySelector(\".calculating__result span\");\r\n      // елемент, где показывается результат\r\n   \r\n      let sex;\r\n      let height;\r\n      let weight; \r\n      let age;\r\n      let ratio;\r\n   \r\n      if (localStorage.getItem(\"sex\")) {\r\n         sex = localStorage.getItem(\"sex\");\r\n      } else {\r\n         sex = \"female\";\r\n         localStorage.setItem(\"sex\", \"female\");\r\n      }\r\n   \r\n      if (localStorage.getItem(\"ratio\")) {\r\n         ratio = localStorage.getItem(\"ratio\");\r\n      } else {\r\n         ratio = 1.375;\r\n         localStorage.setItem(\"ratio\", 1.375);\r\n      }\r\n   \r\n      //Установка значений по умолчанию, и передача их в локалсторейдж. Если в локстр уже что то есть\r\n      // то значения вытягиваются оттуда\r\n   \r\n      function initLocalSettings(selector, activeClass) {\r\n         const elements = document.querySelectorAll(selector);\r\n   \r\n         elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n   \r\n            if (elem.getAttribute(\"id\") === localStorage.getItem(\"sex\")) {\r\n               elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute(\"data-ratio\") === localStorage.getItem(\"ratio\")) {\r\n               elem.classList.add(activeClass);\r\n            }\r\n         });\r\n      }\r\n      // Функция с помощью перебора и условия устанавливает класс активности в соотвествии с совпадением \r\n      // с данных в локалсторедж\r\n   \r\n      initLocalSettings(\"#gender div\", \"calculating__choose-item_active\");\r\n      initLocalSettings(\".calculating__choose_big div\", \"calculating__choose-item_active\");\r\n   \r\n   \r\n      function calcTotal() {\r\n         if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = \"____\";\r\n            return;\r\n         }\r\n         // если хоть одних данные не указаны - подсчет не происходит\r\n         if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n         } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n         }\r\n      }\r\n   \r\n      calcTotal();\r\n   \r\n      function getStaticInformation(selector, activeClass) {\r\n         const elements = document.querySelectorAll(selector);\r\n   \r\n         elements.forEach(elem => {\r\n            elem.addEventListener(\"click\", (e) => {\r\n               if (e.target.getAttribute(\"data-ratio\")) {\r\n                  ratio = +e.target.getAttribute(\"data-ratio\");\r\n                  localStorage.setItem(\"ratio\", +e.target.getAttribute(\"data-ratio\"));\r\n               } else {\r\n                  sex = e.target.getAttribute(\"id\");\r\n                  localStorage.setItem(\"sex\", e.target.getAttribute(\"id\"));\r\n               }\r\n   \r\n               elements.forEach(elem => {\r\n                  elem.classList.remove(activeClass);\r\n               });\r\n   \r\n               e.target.classList.add(activeClass);\r\n   \r\n               calcTotal();\r\n            });\r\n         });\r\n      }\r\n      // Функция создана для двух статичных функций калькулятора пол и активность\r\n      // С помощью перебора навешиваем обработчик события на все элементы обеих пунктов калькулятора\r\n      // С начала провертся активность. При нажатии на любой пункт - значение из дата-атрибута передаётся \r\n      // в переменную ratio. Так же сразу вносится значение в локалсторейдж\r\n      // Потом то же самое происходит с полом. \r\n      // Так как пол у нас не в дата атрибутах а в id - ошибки не будет.\r\n      // Потом устанавливается класс активности на нажатую кнопку\r\n      // При любом нажатии запускается функция калькулятора\r\n   \r\n      getStaticInformation(\"#gender div\", \"calculating__choose-item_active\");\r\n      getStaticInformation(\".calculating__choose_big div\", \"calculating__choose-item_active\");\r\n   \r\n      function getDynamicInfo(selector) {\r\n         const input = document.querySelector(selector);\r\n   \r\n         input.addEventListener(\"input\", () => {\r\n            if (input.value.match(/\\D/g)) {\r\n               input.style.border = \"1px red solid\";\r\n            } else {\r\n               input.style.border = \"none\";\r\n            }\r\n            // если вводимое в поля не числа - вкл подсветка поля \r\n   \r\n            switch (input.getAttribute(\"id\")) {\r\n               case \"height\":\r\n                  height = +input.value;\r\n                  break;\r\n               case \"weight\":\r\n                  weight = +input.value;\r\n                  break;\r\n               case \"age\":\r\n                  age = +input.value;\r\n                  break;\r\n            }\r\n            // если инпут атрибут совпадает с кейсом - информация переносится в переменнную\r\n            calcTotal();\r\n         });\r\n      }\r\n   \r\n      getDynamicInfo(\"#height\");\r\n      getDynamicInfo(\"#weight\");\r\n      getDynamicInfo(\"#age\");\r\n}\r\n\r\nexport default calc;","import {gerResource} from \"../services/services\";\r\n\r\nfunction cards() {\r\n   // Класс для карт\r\n   class MenuCard {\r\n      constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n         this.src = src;\r\n         this.alt = alt;\r\n         this.title = title;\r\n         this.descr = descr;\r\n         this.price = price;\r\n         this.classes = classes;\r\n         // все дополнительные классы будут помещены в массив\r\n         this.parent = document.querySelector(parentSelector);\r\n         this.transfer = 30;\r\n         // курс валют\r\n         this.changeToUAH();\r\n         // метод можно добавлять сразу в конструктор\r\n         // и теперь любой прайс будет сразу конвертироваться из грн в дол\r\n      }\r\n\r\n      changeToUAH() {\r\n         this.price = this.price * this.transfer;\r\n      }\r\n      // метод превращающий доллар в грн\r\n\r\n      render() {\r\n         const element = document.createElement(\"div\");\r\n         // установка дефолтного значения рест оператора. Если в классес ничего не приходит (это массив, проверка через \r\n         // длинну, то устанавливается дефолтный класс. это класс, который по идеи всегда должны устанавливать)\r\n         if (this.classes.length === 0) {\r\n            this.classes = \"menu__item\";\r\n            element.classList.add(this.classes);\r\n         } else {\r\n            this.classes.forEach(className => element.classList.add(className));\r\n         }\r\n         // дефолтный класс + дополнительные классы (если они есть), перебираются и добавляются к element\r\n\r\n         element.innerHTML = `\r\n                 <img src=${this.src} alt=${this.alt}>\r\n                 <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                 <div class=\"menu__item-descr\">${this.descr}</div>\r\n                 <div class=\"menu__item-divider\"></div>\r\n                 <div class=\"menu__item-price\">\r\n                     <div class=\"menu__item-cost\">Цена:</div>\r\n                     <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                 </div>\r\n             `;\r\n         this.parent.append(element);\r\n      }\r\n   }\r\n\r\n   // Можно двома способами испольозовать класс.\r\n   // Первый способо стандартный = помещение обьекта в переменную\r\n   // const div = new MenuCard();\r\n   // div.render()\r\n   // Но если этот обьект нужно использовать только на месте, то можно без присвоения переменной\r\n\r\n   gerResource(\"http://localhost:3000/menu\")\r\n      .then(data => {\r\n         data.forEach(({\r\n            img,\r\n            altimg,\r\n            title,\r\n            descr,\r\n            price\r\n         }) => {\r\n            new MenuCard(img, altimg, title, descr, price, \".menu .container\").render();\r\n         });\r\n         // с помощью деструктуризации помещаем данные из сервера в клас, потом рендерим на странице\r\n         // метод ФОРИЧ, сделает это столько раз, сколько у нас елементов в масиве на сервере ДБ.ДЖЕЙСОН\r\n      });\r\n\r\n}\r\n\r\nexport default cards;","import {openModal, closeModal} from \"./modal\";\r\nimport {postData} from \"../services/services\";\r\n\r\nfunction forms(formSelector, timerTimeout) {\r\n   // Forms\r\n   const forms = document.querySelectorAll(formSelector);\r\n   // выносим все формы с сайта в переменную формс\r\n\r\n   const message = {\r\n      loading: \"img/form/spinner.svg\",\r\n      success: \"Спасибо, мы скоро с вами свяжемся\",\r\n      failure: \"Что-то пошло не так...\"\r\n   };\r\n   // обьект с типами сообщений результата запроса \r\n\r\n   forms.forEach(item => {\r\n      bindPostData(item);\r\n   });\r\n   // все формы взяты через квериселектор алл, по этому для присваивания функции постДата\r\n   // делаем перебор массива\r\n\r\n  \r\n   function bindPostData(form) {\r\n      // эта  - за привязку постинга\r\n      form.addEventListener('submit', (e) => {\r\n         e.preventDefault();\r\n\r\n         let statusMessage = document.createElement('img');\r\n         statusMessage.src = message.loading;\r\n         statusMessage.style.cssText = `\r\n              display: block;\r\n              margin: 0 auto;\r\n          `;\r\n         form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n         const formData = new FormData(form);\r\n         // Конструктор FormData() создаёт новые объект FormData, если проще - HTML-форму.\r\n         // XMLHttpRequest 2 добавляет поддержку для нового интерфейса FormData. \r\n         // Объекты FormData позволяют вам легко конструировать наборы пар ключ-значение, \r\n         // представляющие поля формы и их значения\r\n\r\n\r\n         //  Для того, что бы обьект ФОРМДАТА можно было использовать, для отправки\r\n         // на сервер в JSON формате, необходимо сначало этот обьект сделать\r\n         // обычным обьектом\r\n         // const object = {};\r\n         // formData.forEach(function (value, key) {\r\n         //    object[key] = value;\r\n         // });\r\n         // ПЛОХОЙ СПОСОБ\r\n\r\n         const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n         // ХОРОШИЙ СПОСОБ\r\n\r\n\r\n         postData('http://localhost:3000/requests', json)\r\n            .then(data => {\r\n               console.log(data);\r\n               showThanksModal(message.success);\r\n               statusMessage.remove();\r\n            }).catch(() => {\r\n               showThanksModal(message.failure);\r\n            }).finally(() => {\r\n               form.reset();\r\n            });\r\n      });\r\n   }\r\n\r\n\r\n   // Ф-ция заключается в том, что мы возьмем модальное окно \r\n   // \"Мы свяжемся с вами ...\"  и спрячем его (добавим класс \"hide\")\r\n   function showThanksModal(message) {\r\n      const prevModalDialog = document.querySelector('.modal__dialog');\r\n      prevModalDialog.classList.add('hide');\r\n\r\n      // Потом запускается родительский элемент (серый фон)\r\n      openModal(\".modal\", timerTimeout);\r\n\r\n      // создаётся новый елемент на странице, и ему присваивается тот же\r\n      // самый клас модал диалог\r\n      // в тот же елемент помещается код модального окна\r\n      const thanksModal = document.createElement('div');\r\n      thanksModal.classList.add('modal__dialog');\r\n      thanksModal.innerHTML = `\r\n                <div class=\"modal__content\">\r\n                    <div class=\"modal__close\" data-close>×</div>\r\n                    <div class=\"modal__title\">${message}</div>\r\n                </div>\r\n            `;\r\n      document.querySelector('.modal').append(thanksModal);\r\n      // потом в родительский элемент помещается редактированое мод. окно\r\n\r\n      setTimeout(() => {\r\n         thanksModal.remove();\r\n         prevModalDialog.classList.add('show');\r\n         prevModalDialog.classList.remove('hide');\r\n         closeModal(\".modal\");\r\n      }, 4000);\r\n      // через 4 секудны убирается окно благодарности, \r\n      // возвращаем на место класс отображения окну ввода формы( что бы в следующий раз оно снова работало)\r\n      // закрываем полностью модальное окно\r\n   }\r\n}\r\n\r\nexport default forms;","function closeModal(modalSelector) {\r\n   const modalWindow = document.querySelector(modalSelector);\r\n   modalWindow.style.display = \"none\";\r\n   document.body.style.overflow = \"\";\r\n}\r\n\r\nfunction openModal(modalSelector, timerTimeout) {\r\n   const modalWindow = document.querySelector(modalSelector);\r\n   modalWindow.style.display = \"block\";\r\n   document.body.style.overflow = \"hidden\";\r\n\r\n   console.log(timerTimeout);\r\n   if (timerTimeout) {\r\n      clearTimeout(timerTimeout);\r\n   }\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, timerTimeout) {\r\n   // Modal\r\n   const modalOn = document.querySelectorAll(triggerSelector);\r\n   const modalWindow = document.querySelector(modalSelector);\r\n   const modalStyle = getComputedStyle(modalWindow);\r\n\r\n   modalOn.forEach(item => {\r\n      item.addEventListener(\"click\", () => {\r\n         openModal(modalSelector, timerTimeout);\r\n      });\r\n   });\r\n\r\n   modalWindow.addEventListener(\"click\", (e) => {\r\n      if (e.target === modalWindow || e.target.getAttribute(\"data-close\") == \"\") {\r\n         closeModal(modalSelector);\r\n      }\r\n   });\r\n   // Фунцкция, на клик вне области модального окна\r\n\r\n   document.addEventListener(\"keydown\", (e) => {\r\n      if (e.code === \"Escape\" && modalStyle.display == \"block\") {\r\n         closeModal(modalSelector);\r\n      }\r\n   });\r\n   // // Функция на закрывание модального окна кнопкой еск\r\n\r\n\r\n   const scrollHeight = Math.max(\r\n      document.body.scrollHeight, document.documentElement.clientHeight,\r\n      document.body.offsetHeight, document.documentElement.offsetHeight,\r\n      document.body.clientHeight, document.documentElement.clientHeight\r\n   );\r\n   // правильная высота всего содержимого документа\r\n\r\n   function showModalByScroll() {\r\n      if (window.pageYOffset + document.documentElement.clientHeight >= scrollHeight) {\r\n         openModal(modalSelector, timerTimeout);\r\n         removeEventListener(\"scroll\", showModalByScroll);\r\n      }\r\n   }\r\n   // функция, вызывающая мод окно в конце страницы. ремув нужен, что бы \r\n   // она сработала только 1 раз.\r\n\r\n   window.addEventListener(\"scroll\", showModalByScroll);\r\n}\r\n\r\nexport default modal;\r\nexport {openModal};\r\nexport {closeModal};","import {getZero} from \"./timer\";\r\n// импорт ф-ции гетЗеро от таймера\r\n\r\nfunction slider({container, slide, nextArrow, prevArrov, totalCounterA, currentCounterA, wrapper, field}) {\r\n   // слайдер\r\n   const slider = document.querySelector(container);\r\n   // весь блок выносим, что бы установить посишин релатив\r\n   const currentCounter = document.querySelector(currentCounterA);\r\n   const totalCounter = document.querySelector(totalCounterA);\r\n   const prevArr = document.querySelector(prevArrov);\r\n   const nextArr = document.querySelector(nextArrow);\r\n   const offerSlide = document.querySelectorAll(slide);\r\n   const slidesWrapper = document.querySelector(wrapper);\r\n   const slidesField = document.querySelector(field);\r\n   // новый блок между картинками и род. блоком\r\n   const width = window.getComputedStyle(slidesWrapper).width;\r\n   // ширина родительского блока\r\n\r\n   \r\n   let slideIndex = 1;\r\n   let offset = 0;\r\n   // отступ\r\n\r\n   slidesField.style.width = 100 * offerSlide.length + \"%\";\r\n   // устанавливаем ширину нового блока = сейчас он 400%\r\n   slidesField.style.display = \"flex\";\r\n   slidesField.style.transition = \"0.5s all\";\r\n\r\n   slidesWrapper.style.overflow = \"hidden\";\r\n   // \r\n   offerSlide.forEach(slide => {\r\n      slide.style.width = width;\r\n   });\r\n   // задаем каждой картинке ширину родительского блока(?что бы полностью помещались)\r\n   slider.style.position = \"relative\";\r\n   // для навигации делаем позишин релатив\r\n\r\n   const dots = document.createElement(\"ol\");\r\n   // создаем большую обертку для точек навигации\r\n   const dotsArr = [];\r\n\r\n   dots.classList.add(\"carousel-indicators\");\r\n   dots.style.cssText = `\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      z-index: 15;\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-right: 15%;\r\n      margin-left: 15%;\r\n      list-style: none;\r\n   `;\r\n   slider.append(dots);\r\n\r\n   for (let i = 0; i < offerSlide.length; i++) {\r\n      const dot = document.createElement(\"li\");\r\n      dot.setAttribute(\"data-slide-to\", i + 1);\r\n      dot.style.cssText = `\r\n         box-sizing: content-box;\r\n         flex: 0 1 auto;\r\n         width: 30px;\r\n         height: 6px;\r\n         margin-right: 3px;\r\n         margin-left: 3px;\r\n         cursor: pointer;\r\n         background-color: #fff;\r\n         background-clip: padding-box;\r\n         border-top: 10px solid transparent;\r\n         border-bottom: 10px solid transparent;\r\n         opacity: .5;\r\n         transition: opacity .6s ease;\r\n      `;\r\n\r\n      if (i == 0) {\r\n         dot.style.opacity = 1;\r\n      }\r\n      dots.append(dot);\r\n      dotsArr.push(dot);\r\n   }\r\n\r\n   currentCounter.innerHTML = getZero(slideIndex);\r\n\r\n   function dotsOpacity() {\r\n      dotsArr.forEach(dot => dot.style.opacity = \".5\");\r\n      dotsArr[slideIndex - 1].style.opacity = 1;\r\n   }\r\n\r\n   function deleteNotDigits(str) {\r\n      return +str.slice(0, str.length - 2);\r\n   }\r\n   console.log(width);\r\n\r\n   nextArr.addEventListener(\"click\", () => {\r\n      if (offset == (deleteNotDigits(width)) * (offerSlide.length - 1)) {\r\n         offset = 0;\r\n      } else {\r\n         offset += deleteNotDigits(width);\r\n      }\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`;\r\n      // двигает блок в лево по оси Х на то колчество покселей, которое приходит \r\n      // с условия выше\r\n\r\n      if (slideIndex == offerSlide.length) {\r\n         slideIndex = 1;\r\n         currentCounter.innerHTML = getZero(slideIndex);\r\n      } else {\r\n         currentCounter.innerHTML = getZero(++slideIndex);\r\n      }\r\n\r\n      dotsOpacity();\r\n   });\r\n\r\n   prevArr.addEventListener(\"click\", () => {\r\n      if (offset == 0) {\r\n         offset = deleteNotDigits(width) * (offerSlide.length - 1);\r\n      } else {\r\n         offset -= deleteNotDigits(width);\r\n      }\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n      if (slideIndex == 1) {\r\n         slideIndex = offerSlide.length;\r\n         currentCounter.innerHTML = getZero(slideIndex);\r\n      } else {\r\n         currentCounter.innerHTML = getZero(--slideIndex);\r\n      }\r\n\r\n      dotsOpacity();\r\n   });\r\n\r\n   totalCounter.innerHTML = getZero(offerSlide.length);\r\n\r\n   dotsArr.forEach(dot => {\r\n      dot.addEventListener(\"click\", (e) => {\r\n         const slideTo = e.target.getAttribute(\"data-slide-to\");\r\n\r\n         slideIndex = slideTo;\r\n         offset = deleteNotDigits(width) * (slideTo - 1);\r\n         slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n         dotsOpacity();\r\n         currentCounter.innerHTML = getZero(slideIndex);\r\n      });\r\n   });\r\n\r\n   // function slidesOff() {\r\n   //    offerSlide.forEach((item) => {\r\n   //       item.classList.add(\"hide\");\r\n   //       item.classList.remove(\"show\");\r\n   //    });\r\n   // }\r\n\r\n   // function slideOn(i) {\r\n   //    offerSlide[i].classList.add(\"show\", \"fade\");\r\n   //    offerSlide[i].classList.remove(\"hide\");\r\n   // }\r\n\r\n   // slidesOff();\r\n\r\n   // function slider(slidesItem, leftArr, rightArr, startIndex) {\r\n   //    let index = startIndex;\r\n   //    currentCounter.innerHTML = getZero(index + 1);\r\n\r\n   //    function basicSlider() {\r\n   //       currentCounter.innerHTML = getZero(index + 1);\r\n   //       slidesOff();\r\n   //       slideOn(index);\r\n   //    }\r\n\r\n   //    leftArr.addEventListener(\"click\", () => {\r\n   //       if (index == 0) {\r\n   //          index = slidesItem.length - 1;\r\n   //       } else {\r\n   //          index -= 1;\r\n   //       }\r\n   //       basicSlider();\r\n   //    });\r\n\r\n   //    rightArr.addEventListener(\"click\", () => {\r\n   //       if (index == slidesItem.length - 1) {\r\n   //          index = 0;\r\n   //       } else {\r\n   //          index += 1;\r\n   //       }\r\n   //       basicSlider();\r\n   //    });\r\n   //    slideOn(index);\r\n   // }\r\n\r\n   // slider(offerSlide, prevArr, nextArr, 0);\r\n   // totalCounter.innerHTML = getZero(offerSlide.length);\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n   // Табы\r\n   const tabs = document.querySelectorAll(tabsSelector);\r\n   const tabsContent = document.querySelectorAll(tabsContentSelector);\r\n   const tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n\r\n   function hideTabContent() {\r\n      tabsContent.forEach(item => {\r\n         item.classList.add(\"hide\");\r\n         item.classList.remove(\"show\");\r\n      });\r\n      // закрываем всю контентную часть\r\n\r\n      tabs.forEach(item => {\r\n         item.classList.remove(activeClass);\r\n      });\r\n   }\r\n   // отключаем класс активности (жирный шрифт)\r\n\r\n   function showTabContent(i = 0) {\r\n      tabsContent[i].classList.add(\"show\", \"fade\");\r\n      tabsContent[i].classList.remove(\"hide\");\r\n      tabs[i].classList.add(activeClass);\r\n   }\r\n   // показываем нужную контентую часть и выделяем активный таб\r\n   // если нужно, что бы по умолч. без аргумента функция использовала 0 - испольузем это (i = 0) \r\n\r\n\r\n\r\n   hideTabContent();\r\n   showTabContent();\r\n\r\n   tabsParent.addEventListener(\"click\", (e) => {\r\n      const target = e.target;\r\n      // можно создать переменную и поместить в неё е.таргет\r\n      if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n         tabs.forEach((item, i) => {\r\n            if (target == item) {\r\n               hideTabContent();\r\n               showTabContent(i);\r\n            }\r\n         });\r\n      }\r\n   });\r\n   // Создали делегирование событий, после условия создали перебор псевдомасива с табами, \r\n   // если айтем псевдомасива совпадает с таргетом, то выводим две функции\r\n   // одна закрывает все табы, вторая показывает таб с тем номером, на который кликнул пользователь \r\n   // (айтем проверяется условием, и по условию присваивается номер, который передаётся в функцию)\r\n}\r\n\r\nexport default tabs;","function getZero(num) {\r\n   if (num > 0 && num < 10) {\r\n      return `0${num}`;\r\n   } else {\r\n      return num;\r\n   }\r\n}\r\n\r\nfunction timer(id, deadline) {\r\n   // Таймер\r\n   function getTimeRemaining(endtime) {\r\n      // функция, вычесляющая данные для таймера\r\n      let days, hours, minutes, seconds;\r\n      const t = Date.parse(endtime) - Date.parse(new Date());\r\n\r\n      if (t <= 0) {\r\n         days = 0;\r\n         hours = 0;\r\n         minutes = 0;\r\n         seconds = 0;\r\n      } else {\r\n         days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n         hours = Math.floor((t / (1000 * 60 * 60)) % 24);\r\n         minutes = Math.floor((t / 1000 / 60) % 60);\r\n         seconds = Math.floor((t / 1000) % 60);\r\n      }\r\n      // В переменной Т = разница между дедлайном и текущим временем\r\n      // Все следующие переменные вычесляют дни, часы.... в остатке + с \r\n      // округлнеие Math.floor(округляет к меньшему)\r\n      return {\r\n         \"total\": t,\r\n         \"days\": days,\r\n         \"hours\": hours,\r\n         \"minutes\": minutes,\r\n         \"seconds\": seconds\r\n      };\r\n      // функция возвращает обьект с данными\r\n   }\r\n\r\n   \r\n   // функция, которая подставляем 0, когда значения в таймере не двузначное\r\n\r\n   function setClock(selector, endtime) {\r\n      // функция таймер, в параметрах селектор елемента на стр (таймеров может быть\r\n      // много), второй - наш дедлайн\r\n      const timer = document.querySelector(selector);\r\n      const days = timer.querySelector(\"#days\");\r\n      const hours = timer.querySelector(\"#hours\");\r\n      const minutes = timer.querySelector(\"#minutes\");\r\n      const seconds = timer.querySelector(\"#seconds\");\r\n      const timeInterval = setInterval(updateClock, 1000);\r\n      // создаём интревальный запуск функции, которая обновляет данные\r\n      // на странице (раз в 1 секунду)\r\n\r\n      updateClock();\r\n      // вызывает функцию на страницу сразу, не дожидаясь задержки в 1000мс\r\n\r\n      function updateClock() {\r\n         const t = getTimeRemaining(endtime);\r\n         // помещаем в переменную обьект из 1 функции\r\n\r\n         days.innerHTML = getZero(t.days);\r\n         hours.innerHTML = getZero(t.hours);\r\n         minutes.innerHTML = getZero(t.minutes);\r\n         seconds.innerHTML = getZero(t.seconds);\r\n         // присваиваем елементам на странице соответсвующии значения из функции\r\n\r\n         if (t.total <= 0) {\r\n            clearInterval(timeInterval);\r\n         }\r\n         // останавливаем функцию в случае, если разница в времени будет 0\r\n      }\r\n   }\r\n   setClock(id, deadline);\r\n}\r\n\r\nexport default timer;\r\nexport {getZero};\r\n// еспорт ф-ции гетЗеро в слайдер","const postData = async (url, data) => {\r\n   // эта функция отвечает за постинг данных\r\n   const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n         'Content-Type': 'application/json'\r\n      },\r\n      body: data\r\n      //   дефолтный фетч пост запрос и перевод обьекта в Джейсон строку\r\n   });\r\n\r\n   return await res.json();\r\n   // response.json() – декодирует ответ в формате JSON, \r\n   // ВОЗВРАЩАЕМ МЫ ЕГО, ПОТОМУ ЧТО В RES = ПРОМИС\r\n};\r\n// async - обьявляет, что функция асинхронна\r\n// await - указывает, что бы пока не выполнилось это действие, \r\n// к следуюющему не переходить\r\n\r\nconst gerResource = async (url) => {\r\n   // эта функция отвечает за получение данных для карточек\r\n   const res = await fetch(url);\r\n\r\n   if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n   }\r\n   // ok – логическое значение: будет true, если код HTTP-статуса в диапазоне 200-299.\r\n   // status – код статуса HTTP-запроса, например 200.\r\n   // throw new Error вручную выкидывает ошибку в консоль\r\n   return await res.json();\r\n};\r\n\r\nexport {postData};\r\nexport {gerResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from \"./modules/tabs\";\r\nimport modal from \"./modules/modal\";\r\nimport forms from \"./modules/forms\";\r\nimport slider from \"./modules/slider\";\r\nimport timer from \"./modules/timer\";\r\nimport cards from \"./modules/cards\";\r\nimport calc from \"./modules/calc\";\r\nimport {openModal} from \"./modules/modal\";\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  \r\n   const timerTimeout = setTimeout(() => openModal(\".modal\", timerTimeout), 500000);\r\n   // вызов функции появления мод окна через некотор. время\r\n   const deadline = new Date();\r\n   deadline.setTime((new Date() - ((new Date().getHours() * 60 * 60 * 1000) + \r\n   (new Date().getSeconds() * 60 * 1000) + \r\n   (new Date().getMilliseconds()))) +\r\n   (24 * 3600 * 1000) * 6);\r\n   // Дедлайн таймера\r\n\r\n\r\n   tabs(\".tabheader__item\", \".tabcontent\", \".tabheader__items\", \"tabheader__item_active\");\r\n   modal(\"[data-modal]\", \".modal\", timerTimeout);\r\n   forms(\"form\", timerTimeout);\r\n   slider({\r\n      container : \".offer__slider\",\r\n      slide: \".offer__slide\",\r\n      nextArrow: \".offer__slider-next\",\r\n      prevArrov: \".offer__slider-prev\",\r\n      currentCounterA: \"#current\",\r\n      totalCounterA: \"#total\",\r\n      wrapper: \".offer__slider-wrapper\",\r\n      field: \".offer__slider-inner\"\r\n   });\r\n   timer(\".timer\", deadline);\r\n   cards();\r\n   calc();\r\n});"],"names":[],"sourceRoot":""}